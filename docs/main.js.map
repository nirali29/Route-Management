{"version":3,"sources":["./src/app/route-map/route-map.component.ts","./src/app/route-map/route-map.component.html","./src/app/route-create/route-create.component.ts","./src/app/route-create/route-create.component.html","./src/app/route-list/route-list.component.ts","./src/app/route-list/route-list.component.html","./src/environments/environment.ts","./src/app/services/routes.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/assets/stops.ts","./src/assets/mock-routes.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { PolylineManager, GoogleMapsAPIWrapper } from '@agm/core';\nimport { Stop } from '../interfaces/route.interface';\n\n@Component({\n  selector: 'app-route-map',\n  templateUrl: './route-map.component.html',\n  styleUrls: ['./route-map.component.scss'],\n  providers: [PolylineManager, GoogleMapsAPIWrapper]\n})\nexport class RouteMapComponent implements OnInit {\n\n  constructor(_polylineManager: PolylineManager) { }\n\n  @Input() stops: any[];\n  lat = 26.9124;\n  lng = 75.7873;\n  latlng: any[] = [];\n \n  ngOnInit(): void {\n    \n  }\n\n}\n","<agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"4\">\n    <agm-marker *ngFor=\"let i of stops\"\n              [latitude]=\"i.latitude\"\n              [longitude]=\"i.longitude\" [agmFitBounds]=\"true\"\n              [label]=\"{color: 'white', text: i.stopId + '-' + i.stopName}\"></agm-marker>\n    <agm-polyline [strokeColor]=\"'#07b57a'\">\n        <ng-container *ngFor=\"let i of stops\">\n            <agm-polyline-point [latitude]=\"i.latitude\" [longitude]=\"i.longitude\">\n            </agm-polyline-point>\n        </ng-container>\n    </agm-polyline>\n</agm-map>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { MyRoute, Stop } from 'src/app/interfaces/route.interface';\nimport { RoutesService } from '../services/routes.service';\nimport {FileUploadModule} from 'primeng/fileupload';\nimport {HttpClientModule} from '@angular/common/http';\n\n@Component({\n  selector: 'app-route-create',\n  templateUrl: './route-create.component.html',\n  styleUrls: ['./route-create.component.scss'],\n  \n})\nexport class RouteCreateComponent implements OnInit {\n\n  @Input() updateForm? : boolean;\n  route: MyRoute;\n  @Input() routeId?: string;\n  @Input() inputRoute?: MyRoute;\n  inputRouteName: string;\n  stops: Stop[] = [];\n  inputDirection: string;\n  inputStatus: string;\n  inputType: string;\n  selectedStops: Stop[] = [];\n  @Output() createEvent = new EventEmitter();\n  constructor(private routesService: RoutesService) {}\n\n  ngOnInit(): void {\n    this.inputRouteName = this.inputRoute? this.inputRoute.routeName: '';\n    this.inputDirection = this.inputRoute? this.inputRoute.direction: 'Up';\n    this.inputStatus = this.inputRoute? this.inputRoute.status: 'Active';\n    this.inputType = this.inputRoute? this.inputRoute.type: 'AC';\n    this.stops = this.routesService.getStops();\n    this.selectedStops.push(this.stops[0]);\n  }\n\n  createRoute(data) {\n    this.routesService.createRoute(this.inputRouteName, this.inputDirection, this.inputStatus, this.inputType, this.selectedStops);\n    this.createEvent.emit('');\n  }\n\n  \n  updateRoute() {\n    this.routesService.updateRoute(this.inputRoute.routeId, this.inputRouteName, this.inputDirection, this.inputStatus, this.inputType, this.selectedStops);\n    this.createEvent.emit('');\n  }\n\n  handleFileInput(event) {\n    //event.files == files to upload\n    console.log(event);\n    const reader = new FileReader();\n    let text;\n    reader.onload = () => {\n      text = reader.result;\n      var json = this.csvJSON(text);\n      this.routesService.uploadCsv(json);\n      this.createEvent.emit('');\n    };\n    reader.readAsText(event[0]);\n}\n\npublic csvJSON(csv) {\n  // csv = csv.substring(1, csv.length-1);\n  var lines = csv.split(\"\\n\");\n  var result = [];\n  var headers = lines[0].substring(0, lines[0].length-1).split(\",\");\n  for (var i = 1; i < lines.length-1; i++) {\n      var obj = {};\n      var currentline = lines[i].split(\",\");\n      for (var j = 0; j < headers.length; j++) {\n          obj[headers[j]] = currentline[j];\n      }\n      result.push(obj);\n  }\n  return result; //JSON\n}\n\n}\n\n","<div class=\"create-title\">\n    <h2 *ngIf=\"!updateForm\"> Create Route </h2>\n    <h2 *ngIf=\"updateForm\"> Update Route </h2>\n</div>\n<div class=\"container\">\n    <form #createForm=\"ngForm\" (ngSubmit) = \"createRoute(createForm.value)\" ngNativeValidate>\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"fname\">Route Name</label>\n      </div>\n      <div class=\"col-75\">\n        <input name=\"routeName\" type=\"text\" id=\"fname\" placeholder=\"Route name..\" [(ngModel)]=\"inputRouteName\" required>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"direction\">Direction</label>\n      </div>\n      <div class=\"col-75\">\n        <select id=\"direction\" name=\"direction\" [(ngModel)]=\"inputDirection\">\n          <option value=\"Up\" selected>Up</option>\n          <option value=\"Down\">Down</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-25\">\n          <label for=\"status\">Status</label>\n        </div>\n        <div class=\"col-75\">\n          <select id=\"status\" name=\"status\" [(ngModel)]=\"inputStatus\">\n            <option value=\"Active\" selected>Active</option>\n            <option value=\"Inactive\">Inactive</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-25\">\n          <label for=\"type\">Type</label>\n        </div>\n        <div class=\"col-75\">\n          <select id=\"type\" name=\"type\" [(ngModel)]=\"inputType\">\n            <option value=\"AC\">AC</option>\n            <option value=\"General\">General</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-25\">\n          <label for=\"stops\">Stops</label>\n        </div>\n        <div class=\"col-75\">\n            <p-multiSelect  class=\"multiselect-dropdown\" name=\"stops\" [options]=\"stops\" [(ngModel)]=\"selectedStops\" optionLabel=\"stopId\" optionValue=\"stopId\"></p-multiSelect>\n        </div>\n      </div>\n    <div class=\"button-row\">\n      <input type=\"submit\" value=\"Submit\" *ngIf=\"!updateForm\">\n      <input type=\"button\" *ngIf=\"updateForm\" value=\"Update\" (click)=\"updateRoute()\">\n      <label *ngIf=\"!updateForm\"> OR </label>\n        <input type=\"file\" *ngIf=\"!updateForm\"\n            id=\"file\" accept=\".csv\"\n            (change)=\"handleFileInput($event.target.files)\">\n    </div>\n    </form>\n</div>\n\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild,Output, EventEmitter} from '@angular/core';\nimport { ROUTES } from '../../assets/mock-routes';\nimport { MyRoute } from '../interfaces/route.interface';\nimport * as FileSaver from 'file-saver';\nimport { RoutesService } from '../services/routes.service';\nimport { OverlayPanel } from 'primeng/overlaypanel';\n\n@Component({\n  selector: 'app-route-list',\n  templateUrl: './route-list.component.html',\n  styleUrls: ['./route-list.component.scss']\n})\nexport class RouteListComponent implements OnInit {\n  @ViewChild('op', {static: false}) op: OverlayPanel;\n  @Input() myRoutes: MyRoute[];\n  @Output() mapCoords = new EventEmitter();\n  cols: any[];\n  rows: any[] = [];\n  panelVisible: boolean;\n  selectedRouteId: string;\n  selectedRoute: MyRoute;\n  constructor(private routesService: RoutesService) { }\n  \n  ngOnChanges(changes: SimpleChanges) {\n    this.getRows();\n  }\n\n  ngOnInit(): void {\n    this.cols = [\n      { field: 'routeId', header: 'Route Id' },\n      { field: 'routeName', header: 'Name' },\n      { field: 'direction', header: 'Direction' },\n      { field: 'status', header: 'Status' },\n      { field: 'type', header: 'Type' },\n      { field: 'stops', header: 'Stops' }\n  ];\n  this.getRows();\n  }\n\n  getRows() {\n    this.rows = []; \n    this.myRoutes.forEach(route => {\n      let row = {\n        routeId: route.routeId,\n        routeName: route.routeName,\n        direction: route.direction,\n        status: route.status,\n        type: route.type,\n        stops: route.stops.map((a) => a.stopId).join(', ')\n  \n      }\n      this.rows.push(row);\n    })\n  }\n\n  deleteRow(id: string) {\n    this.routesService.deleteRow(id);\n    this.getRows();\n  }\n\n  updateRow(id: string) {\n    this.selectedRouteId = id;\n    this.selectedRoute = this.myRoutes.filter(route => {return route.routeId == id})[0];\n  }\n\n  routeCreated($event) {\n    this.op.hide();\n    this.routesService.getRoutes()\n          .subscribe(routes => this.myRoutes = routes);\n    this.getRows();\n  }\n\n  generatePolyline(route) {\n    this.mapCoords.emit(this.myRoutes.filter(row => {\n      return row.routeId === route.routeId;\n    })[0].stops);\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<p-table #dt [value]=\"rows\" [columns]=\"cols\" selectionMode=\"single\" [(selection)]=\"selectedRoute\" dataKey=\"routeId\">\n    <ng-template pTemplate=\"caption\">\n        <div class=\"table-title\">\n            <div class=\"heading\"><h2> My Route List </h2></div>\n            <div class=\"p-d-flex; export-button\">\n                <button type=\"button\" pButton pRipple (click)=\"dt.exportCSV()\" class=\"btn\"><i class=\"fa fa-download\"></i>Export</button>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"header\" let-columns>\n        <tr>\n            <th *ngFor=\"let col of columns\" style=\"text-align:center; width: 2rem\">\n                {{col.header}}\n            </th>\n            <th style=\"width:5rem\"></th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-myRoute >\n        <tr >\n            <td style=\"text-align:center\">{{myRoute.routeId}}</td>\n            <td style=\"text-align:center\">{{myRoute.routeName}}</td>\n            <td style=\"text-align:center\">{{myRoute.direction}}</td>\n            <td style=\"text-align:center\">{{myRoute.status}}</td>\n            <td style=\"text-align:center\">{{myRoute.type}}</td>\n            <td style=\"text-align:center\">{{myRoute.stops}}</td>\n            <td>\n                <button type=\"button\" pButton pRipple icon=\"fas fa-trash-alt\" (click)=\"deleteRow(myRoute.routeId)\">Delete</button>\n                <button type=\"button\" pButton pRipple icon=\"fas fa-trash-alt\" (click)=\"op.show($event); updateRow(myRoute.routeId)\">Update</button>\n                <button type=\"button\" pButton pRipple icon=\"fas fa-trash-alt\" (click)=\"generatePolyline(myRoute)\">View Map</button>\n            </td>\n        </tr>\n    </ng-template>\n</p-table>\n\n<p-overlayPanel #op [style]=\"{'text-align': 'center', 'background-color': 'cadetblue'}\" [dismissable]=\"true\" [showCloseIcon]=\"true\">\n    <ng-template pTemplate>\n        <app-route-create\n            (createEvent)=\"routeCreated($event)\"\n            [updateForm]=\"true\"\n            [routeId]=\"selectedRouteId\"\n            [inputRoute]=\"selectedRoute\">\n        </app-route-create>\n    </ng-template>\n</p-overlayPanel>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MyRoute, Stop } from '../interfaces/route.interface';\nimport { ROUTES } from '../../assets/mock-routes';\nimport { STOPS } from '../../assets/stops';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutesService {\n\n  constructor() { }\n\n  getRoutes(): Observable<MyRoute[]> {\n    const heroes = of(ROUTES);\n    return heroes;\n  }\n\n  createRoute(name: string, direction: string, status: string, type: string, stops: any[]) {\n    let maxId = Math.max.apply(Math, ROUTES.map(function(o) { return o.routeId; }))\n    ROUTES.push(\n      {\n        routeId: (maxId + 1).toString(),\n        routeName: name,\n        direction: direction,\n        status: status,\n        type: type,\n        stops: stops\n      }\n    )\n    console.log(ROUTES);\n  }\n\n  deleteRow(id: string) {\n    let index = ROUTES.map(function(e) { return e.routeId; }).indexOf(id);\n    if (index > -1) {\n      ROUTES.splice(index, 1);\n    }\n  }\n\n  updateRoute(id: string, name: string, direction: string, status: string, type: string, stops: any[]) {\n    var foundIndex = ROUTES.findIndex(x => x.routeId == id);\n    let row = {\n        routeId: id,\n        routeName: name,\n        direction: direction,\n        status: status,\n        type: type,\n        stops: stops  \n    }\n    ROUTES[foundIndex] = row;\n    console.log(ROUTES);\n  }\n\n  uploadCsv(routeList: any[]) {\n    routeList.forEach(route => {\n      let stops = [];\n      let routeJson;\n      let maxId = Math.max.apply(Math, ROUTES.map(function(o) { return o.routeId; }))\n      route['stops'].substring(0, route['stops'].length-1).split(' ').forEach(stop => {\n        stops.push((STOPS.filter(a => a.stopId == stop))[0]);\n      });\n      ROUTES.push({\n        routeId: (maxId + 1).toString(),\n        routeName: route.routeName,\n        direction: route.direction,\n        status: route.status,\n        type: route.type,\n        stops: stops\n      });\n    })\n  }\n\n  getStops() {\n    return STOPS;\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { ROUTES } from '../assets/mock-routes';\nimport { MyRoute } from './interfaces/route.interface';\nimport { RoutesService } from './services/routes.service';\nimport { RouteListComponent } from './route-list/route-list.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Router Management';\n  myRoutes: MyRoute[];\n  mapCoords: any[];\n  @ViewChild('table', {static: false}) table: RouteListComponent;\n  constructor(private routesService: RoutesService) {}\n  \n  ngOnInit() {\n      this.routesService.getRoutes()\n          .subscribe(routes => this.myRoutes = routes);\n  }\n\n  routeCreated($event) {\n    this.routesService.getRoutes()\n          .subscribe(routes => this.myRoutes = routes);\n    console.log(this.myRoutes);\n    this.table.getRows();\n  }\n\n  generatePolyline($event) {\n    this.mapCoords = $event;\n  }\n}\n","<div class=\"topnav\">\n  <label> Route Management </label>\n</div>\n<div class=\"flex-container\">\n  <div class=\"route-table\">\n    <app-route-list #table\n      [myRoutes]=\"myRoutes\"\n      (mapCoords)=\"generatePolyline($event)\">\n    </app-route-list>\n  </div>\n  <div class=\"route-create\">\n    <app-route-create\n      (createEvent)=\"routeCreated($event)\"\n      [updateForm]=\"false\"></app-route-create>\n  </div>\n</div>\n<div class=\"map\">\n  <app-route-map\n    [stops]=\"mapCoords\">\n  </app-route-map>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RouteListComponent } from './route-list/route-list.component';\nimport { RouteMapComponent } from './route-map/route-map.component';\nimport { RouteCreateComponent } from './route-create/route-create.component';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {TableModule} from 'primeng/table';\nimport { FormsModule } from '@angular/forms';\nimport { FileUpload } from 'primeng/fileupload';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AgmCoreModule } from '@agm/core';\nimport {OverlayPanelModule} from 'primeng/overlaypanel';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RouteListComponent,\n    RouteMapComponent,\n    RouteCreateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RadioButtonModule,\n    TableModule,\n    FormsModule,\n    MultiSelectModule,\n    BrowserAnimationsModule,\n    OverlayPanelModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBpH5IIGxIz4OxTZyBDv16kKB7xVGcWnHM'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Stop } from 'src/app/interfaces/route.interface';\r\n\r\nexport const STOPS: Stop[] = [\r\n  { stopId: '101', stopName: 'Jaipur', latitude: 26.9124, longitude: 75.7873 },\r\n  { stopId: '102', stopName: 'Mumbai', latitude: 19.0760, longitude: 72.8777 },\r\n  { stopId: '103', stopName: 'Sikkim', latitude: 27.5330, longitude: 88.5122 },\r\n  { stopId: '104', stopName: 'Udaipur', latitude: 24.5854, longitude: 73.7125 },\r\n  { stopId: '105', stopName: 'Chennai', latitude: 13.0827, longitude: 80.2707 },\r\n  { stopId: '106', stopName: 'Bangalore', latitude: 12.9716, longitude: 77.5946 }\r\n  ];","import { MyRoute } from 'src/app/interfaces/route.interface';\r\n\r\nexport var ROUTES: MyRoute[] = [\r\n    { routeId: '1', routeName: 'Route1', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        { stopId: '101', stopName: 'Jaipur', latitude: 26.9124, longitude: 75.7873 },\r\n        { stopId: '104', stopName: 'Udaipur', latitude: 24.5854, longitude: 73.7125 },\r\n        { stopId: '105', stopName: 'Chennai', latitude: 13.0827, longitude: 80.2707 }\r\n    ] },\r\n    { routeId: '2', routeName: 'Route2', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        { stopId: '102', stopName: 'Mumbai', latitude: 19.0760, longitude: 72.8777 },\r\n        { stopId: '103', stopName: 'Sikkim', latitude: 27.5330, longitude: 88.5122 },\r\n        { stopId: '104', stopName: 'Udaipur', latitude: 24.5854, longitude: 73.7125 },\r\n        { stopId: '106', stopName: 'Bangalore', latitude: 12.9716, longitude: 77.5946 }\r\n    ]  },\r\n    { routeId: '3', routeName: 'Route3', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        { stopId: '101', stopName: 'Jaipur', latitude: 26.9124, longitude: 75.7873 },\r\n        { stopId: '102', stopName: 'Mumbai', latitude: 19.0760, longitude: 72.8777 },\r\n        { stopId: '103', stopName: 'Sikkim', latitude: 27.5330, longitude: 88.5122 },\r\n        { stopId: '104', stopName: 'Udaipur', latitude: 24.5854, longitude: 73.7125 },\r\n        { stopId: '105', stopName: 'Chennai', latitude: 13.0827, longitude: 80.2707 }\r\n    ]  },\r\n    { routeId: '4', routeName: 'Route4', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        { stopId: '106', stopName: 'Bangalore', latitude: 12.9716, longitude: 77.5946 },\r\n        { stopId: '101', stopName: 'Jaipur', latitude: 26.9124, longitude: 75.7873 }\r\n    ]  },\r\n    { routeId: '5', routeName: 'Route5', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        { stopId: '101', stopName: 'Jaipur', latitude: 26.9124, longitude: 75.7873 },\r\n        { stopId: '102', stopName: 'Mumbai', latitude: 19.0760, longitude: 72.8777 }\r\n    ]  },\r\n    { routeId: '6', routeName: 'Route6', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        {stopId: \"105\", stopName: \"Chennai\", latitude: 13.0827, longitude: 80.2707},\r\n        {stopId: \"106\", stopName: \"Bangalore\", latitude: 12.9716, longitude: 77.5946},\r\n        {stopId: \"104\", stopName: \"Udaipur\", latitude: 24.5854, longitude: 73.7125}\r\n    ]  },\r\n        { routeId: '7', routeName: 'Route7', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        {stopId: \"103\", stopName: \"Sikkim\", latitude: 27.533, longitude: 88.5122},\r\n        {stopId: \"104\", stopName: \"Udaipur\", latitude: 24.5854, longitude: 73.7125},\r\n        {stopId: \"105\", stopName: \"Chennai\", latitude: 13.0827, longitude: 80.2707}\r\n    ]  },\r\n    { routeId: '8', routeName: 'Route7', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        {stopId: \"105\", stopName: \"Chennai\", latitude: 13.0827, longitude: 80.2707},\r\n        {stopId: \"102\", stopName: \"Mumbai\", latitude: 19.076, longitude: 72.8777}\r\n    ]  },\r\n    { routeId: '9', routeName: 'Route8', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        {stopId: \"106\", stopName: \"Bangalore\", latitude: 12.9716, longitude: 77.5946},\r\n        {stopId: \"101\", stopName: \"Jaipur\", latitude: 26.9124, longitude: 75.7873}\r\n    ]  },\r\n    { routeId: '10', routeName: 'Route9', direction: 'Up', status: 'Active', type: 'AC', stops:[\r\n        {stopId: \"103\", stopName: \"Sikkim\", latitude: 27.533, longitude: 88.5122},\r\n        {stopId: \"102\", stopName: \"Mumbai\", latitude: 19.076, longitude: 72.8777},\r\n        {stopId: \"105\", stopName: \"Chennai\", latitude: 13.0827, longitude: 80.2707},\r\n        {stopId: \"101\", stopName: \"Jaipur\", latitude: 26.9124, longitude: 75.7873},\r\n        {stopId: \"106\", stopName: \"Bangalore\", latitude: 12.9716, longitude: 77.5946}\r\n    ]  }\r\n  ];","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}